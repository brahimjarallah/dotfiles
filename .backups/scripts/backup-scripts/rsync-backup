#!/bin/bash
# Rsync Full System Backup Script
# Independent from Borg backup system

set -euo pipefail

# --------------- CONFIGURATION ---------------
RSYNC_DEST="/mnt/backup/rsync-repo"
LOG_FILE="/var/log/rsync-backup.log"
HOSTNAME=$(hostname)

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# --------------- LOGGING FUNCTION ---------------
log() {
    local level="$1"
    shift
    local message="$*"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    case $level in
        "INFO") echo -e "${BLUE}[INFO]${NC} $message" | tee -a "$LOG_FILE" ;;
        "SUCCESS") echo -e "${GREEN}[SUCCESS]${NC} $message" | tee -a "$LOG_FILE" ;;
        "WARNING") echo -e "${YELLOW}[WARNING]${NC} $message" | tee -a "$LOG_FILE" ;;
        "ERROR") echo -e "${RED}[ERROR]${NC} $message" | tee -a "$LOG_FILE" ;;
    esac
    echo "$timestamp - [$level] $message" >> "$LOG_FILE"
}

# --------------- SAFETY CHECKS ---------------
log "INFO" "Starting rsync backup: $(date)"

# Check if backup drive is mounted
if ! mountpoint -q /mnt/backup; then
    log "ERROR" "Backup drive not mounted at /mnt/backup"
    exit 1
fi

# Create destination directory
mkdir -p "$RSYNC_DEST"

# Check available space
AVAILABLE_SPACE=$(df /mnt/backup | awk 'NR==2 {print $4}')
if [ "$AVAILABLE_SPACE" -lt 5242880 ]; then # Less than 5GB
    log "WARNING" "Low disk space on backup drive (less than 5GB available)"
fi

# --------------- PERFORM RSYNC BACKUP ---------------
log "INFO" "Starting rsync synchronization..."

START_TIME=$(date +%s)

rsync -av --delete \
    --stats \
    --human-readable \
    --exclude="/dev/*" \
    --exclude="/proc/*" \
    --exclude="/sys/*" \
    --exclude="/tmp/*" \
    --exclude="/run/*" \
    --exclude="/mnt/*" \
    --exclude="/media/*" \
    --exclude="/lost+found" \
    --exclude="/var/tmp/*" \
    --exclude="/var/cache/pacman/pkg/*" \
    --exclude="/.snapshots/*" \
    --exclude="/swapfile" \
    --exclude="/home/*/.cache/*" \
    --exclude="/home/*/.local/share/Trash/*" \
    --exclude="/home/*/.mozilla/firefox/*/Cache*" \
    --exclude="/home/*/.config/google-chrome/*/Cache*" \
    --exclude="/home/*/.config/BraveSoftware/*/Cache*" \
    --exclude="/home/*/.config/chromium/*/Cache*" \
    --exclude="/home/*/.steam/steam/steamapps/*" \
    --exclude="/home/*/Downloads/tmp/*" \
    --exclude="/home/*/.local/share/virtualenv/*" \
    --exclude="/home/*/.docker/*" \
    --exclude="/home/*/VirtualBox VMs/*" \
    --exclude="/home/*/.vagrant.d/boxes/*" \
    / "$RSYNC_DEST/" 2>&1 | tee -a "$LOG_FILE"

rsync_exit=$?
END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

# --------------- CHECK RESULT ---------------
if [ $rsync_exit -eq 0 ]; then
    log "SUCCESS" "Rsync backup completed successfully"
    log "INFO" "Duration: ${DURATION} seconds"
elif [ $rsync_exit -eq 24 ]; then
    log "WARNING" "Rsync completed with warnings (some files vanished during transfer)"
    log "INFO" "Duration: ${DURATION} seconds"
else
    log "ERROR" "Rsync failed with exit code: $rsync_exit"
    exit $rsync_exit
fi

# --------------- BACKUP BOOT PARTITION SEPARATELY ---------------
log "INFO" "Backing up /boot partition..."

rsync -av --delete /boot/ "$RSYNC_DEST/boot/" 2>&1 | tee -a "$LOG_FILE"

if [ $? -eq 0 ]; then
    log "SUCCESS" "Boot partition backup completed"
else
    log "WARNING" "Boot partition backup had issues (continuing anyway)"
fi

# --------------- FINAL STATUS ---------------
log "SUCCESS" "Rsync backup operation completed!"
log "INFO" "Backup location: $RSYNC_DEST"
log "INFO" "Total duration: ${DURATION} seconds"

# Show disk usage
BACKUP_SIZE=$(du -sh "$RSYNC_DEST" 2>/dev/null | cut -f1)
log "INFO" "Backup size: $BACKUP_SIZE"

echo
echo -e "${GREEN}=== RSYNC BACKUP COMPLETED ===${NC}"
echo -e "Location: ${BLUE}$RSYNC_DEST${NC}"
echo -e "Duration: ${BLUE}${DURATION}s${NC}"
echo -e "Size: ${BLUE}$BACKUP_SIZE${NC}"
echo -e "Log: ${BLUE}$LOG_FILE${NC}"
echo
