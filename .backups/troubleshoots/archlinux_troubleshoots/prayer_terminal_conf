yay -S curl jq bc

------------------------------------------------------------
prayerTimes.sh
------------------------------------------------------------
#!/bin/sh

# Get some parameters like the location and the school to be used
# when calculating the fajr and isha angle
today=$(date +%s)
lat='-41.124877'
long='-71.365303'
city="Bariloche"
country="Argentina"
method="2" #method 2 for Americas
adjustment="1"
output="$HOME/.local/share/prayers.json"

# The api can be found for free
wget -O $output "http://api.aladhan.com/v1/timings/$today?latitude=$lat&longitude=$long&method=$method&adjustment=$adjustment"
------------------------------------------------------------
prayers.sh
------------------------------------------------------------
#!/bin/sh

prayers="$HOME/.local/share/prayers.json"

# Parsing the data for the five salawat
fajr=$(jq ".data.timings.Fajr" $prayers | bc | awk '{$1=$1};1')
sunrise=$(jq ".data.timings.Sunrise" $prayers | bc | awk '{$1=$1};1')
dhuhr=$(jq ".data.timings.Dhuhr" $prayers | bc | awk '{$1=$1};1')
asr=$(jq ".data.timings.Asr" $prayers | bc | awk '{$1=$1};1')
maghrib=$(jq ".data.timings.Maghrib" $prayers | bc | awk '{$1=$1};1')
isha=$(jq ".data.timings.Isha" $prayers | bc | awk '{$1=$1};1')
day=$(jq ".data.date.hijri.weekday.ar" $prayers | bc | awk '{$1=$1};1')
daynumber=$(jq ".data.date.hijri.day" $prayers | bc | awk '{$1=$1};1')
month=$(jq ".data.date.hijri.month.ar" $prayers | bc | awk '{$1=$1};1')
year=$(jq ".data.date.hijri.year" $prayers | bc | awk '{$1=$1};1')


# Sending the salawat to the stdout
printf "🕌 مواقيت الصلاة ليوم $day \n$daynumber-$month-$year\n۞ الفجر\t\t$fajr\n۞ الشروق\t$sunrise\n۞ الظهر\t$dhuhr\n۞ العصر\t$asr\n۞ المغرب\t$maghrib\n۞ العشاء\t$isha"
------------------------------------------------------------
prayerNotification.sh
------------------------------------------------------------
#!/bin/sh


prayers="$HOME/.local/share/prayers.json"
output="$HOME/.local/share/prayer_widget"
nextprayer=""

# Parsing the data in a nice form
fajr=$(jq ".data.timings.Fajr" $prayers | bc | awk '{$1=$1};1')
dhuhr=$(jq ".data.timings.Dhuhr" $prayers | bc | awk '{$1=$1};1')
asr=$(jq ".data.timings.Asr" $prayers | bc | awk '{$1=$1};1')
maghrib=$(jq ".data.timings.Maghrib" $prayers | bc | awk '{$1=$1};1')
isha=$(jq ".data.timings.Isha" $prayers | bc | awk '{$1=$1};1')

City="باريلوتشي"
currenttime=$(date +%H:%M)


# Export the current desktop session environment variables
export $(xargs -0 -a "/proc/$(pgrep awesome -n -U $UID)/environ")

# Send a notification when it is prayer time
function send_notification {
    notify=$(printf "🕌 حان الآن موعد صلاة ۩ $currentprayer ۩ حسب التوقيت المحلي لمدينة $City")
    notify-send "$notify" -t 30000
}
case $currenttime in
    $fajr)
        currentprayer=$(echo "الفجر")
        #send_notification
        mpv --no-audio-display --volume=70.000 /home/hisham/.local/share/Azan_fajr.webm
        ;;
    $dhuhr | $asr | $maghrib | $isha)
        currentprayer=$(echo "الظهر")
        #send_notification
        mpv --no-audio-display --volume=70.000 /home/hisham/.local/share/Azan.webm
wget -O $output "http://api.aladhan.com/v1/timings/$today?latitude=$lat&longitude=$long&method=$method&adjustment=$adjustment"        ;;
esac

------------------------------------------------------------
prayer.sh   -- works with qtile bar
------------------------------------------------------------

#!/bin/sh

nextprayer=""
prayers="$HOME/.local/share/prayers.json"

# Parsing the data for the five salawat
fajr=$(jq ".data.timings.Fajr" $prayers | bc | awk '{$1=$1};1')
dhuhr=$(jq ".data.timings.Dhuhr" $prayers | bc | awk '{$1=$1};1')
asr=$(jq ".data.timings.Asr" $prayers | bc | awk '{$1=$1};1')
maghrib=$(jq ".data.timings.Maghrib" $prayers | bc | awk '{$1=$1};1')
isha=$(jq ".data.timings.Isha" $prayers | bc | awk '{$1=$1};1')

# Get the current time
currenttime=$(date +%H:%M)

# For each prayer, two variables are used, one to be printed as the name of the prayer (nextprayer), 
# and the other variable (time) to be used in the calculation of the remaining time (nextTime)
if [ $currenttime > $fajr ] && [ $currenttime < $dhuhr ]; then
    nextprayer=$(echo "الظهر")
    nextTime=$dhuhr

elif [ $currenttime > $dhuhr ] && [ $currenttime < $asr ]; then
    nextprayer=$(echo "العصر")
    nextTime=$asr

elif [ $currenttime > $asr ] && [ $currenttime < $maghrib ]; then
    nextprayer=$(echo "المغرب")
    nextTime=$maghrib

elif [ $currenttime > $maghrib ] && [ $currenttime < $isha ]; then
    nextprayer=$(echo "العشاء")
    nextTime=$isha

elif [ $currenttime > $isha ] || [ $currenttime < $fajr ]; then
    nextprayer=$(echo "الفجر")
    nextTime=$fajr
fi

# Calculate the remaining time to the next prayer (or iftar in ramadan and the fast duration is ramadan)
remain=$(date -u -d @$(($(date -d "$nextTime" "+%s") - $(date -d "$currenttime" "+%s"))) "+%H:%M")
fast=$(date -u -d @$(($(date -d "$maghrib" '+%s') - $(date -d "$fajr" '+%s'))) '+%H:%M')
Tofast=$(date -u -d @$(($(date -d "$maghrib" '+%s') - $(date -d "$currenttime" '+%s'))) '+%H:%M')

# Sending the salawat to the stdout
printf "🕌 الصلاة القادمة ۩ $nextprayer ۩ $nextTime (الوقت المتبقي $remain)"
#printf "🕌 الصلاة القادمة ۩ $nextprayer ۩ $nextTime (الوقت المتبقي $remain)\nمدة الصوم $fast\nالوقت المتبقي حتى الإفطار $Tofast"
------------------------------------------------------------
------------------------------------------------------------
*** paste sytemd services to ~/.config/systemd/user/  ***

------------------------------------------------------------
prayerTimes.timer
------------------------------------------------------------
[Unit]
Description=Schedule a message every 1 minute
RefuseManualStart=false
RefuseManualStop=false

[Timer]
#Execute job if it missed a run due to machine being off
Persistent=true
#Run 120 seconds after boot for the first time
OnBootSec=120
#Run every 1 minute thereafter
OnUnitActiveSec=28800
#File describing job to execute
Unit=prayerTimes.service

[Install]
WantedBy=timers.target

------------------------------------------------------------
prayerTimes.service
------------------------------------------------------------
[Unit]
Description=A job to retrive prayer times using curl

[Service]
Type=simple
ExecStart=%h/.local/bin/prayerTimes.sh

[Install]
WantedBy=default.target


------------------------------------------------------------
*** enable services at boot ***
------------------------------------------------------------
systemctl --user enable --now prayerTimes.service

systemctl --user enable --now prayerTimes.timer

